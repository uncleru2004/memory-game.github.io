const BUTTON = document.querySelector("button");
const BOARD = document.querySelector(".board");
const MOVES = document.querySelector(".moves");
const TIMER = document.querySelector(".timer");
const WIN = document.querySelector(".win");
const BOARD_CONTAINER = document.querySelector(".board-container");

const DIMENSION = document.querySelector(".board").getAttribute("data-dimension");
const PICTURES = ["üçé", "üçí", "üçÅ", "üåΩ", "üíÆ", "üçá", "üçâ", "üçå", "üåæ", "üçç"];

const STATISTICS = {
  game: false,
  moves: 0,
  time: 0,
  interval: null,
  rus: ["—Ö–æ–¥", "—Ö–æ–¥–∞", "—Ö–æ–¥–æ–≤"],
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è n –ø–∞—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –ø–æ–ª—è —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–æ–π (—Å–µ–π—á–∞—Å —ç—Ç–æ 4, –∑–Ω–∞—á–∏—Ç n = 8)
function getRandomCards() { 

  let array = [...PICTURES];
  let cards = [];
  let halfAmount = Math.pow(DIMENSION, 2) / 2;

  for (let i = 0; i < halfAmount; i++) {
    const randomIndex = Math.floor(Math.random() * array.length);

    cards.push(array[randomIndex]);
    array.splice(randomIndex, 1);
  }

  return [...cards, ...cards]; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–∞—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è n –ø–∞—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ ("–¢–∞—Å–æ–≤–∞–Ω–∏–µ –§–∏—à–µ—Ä–∞ ‚Äî –ô–µ—Ç—Å–∞")
function shuffle() {
  let array = [...getRandomCards()];

  for (let i = 0; i < array.length; i++) {
    let j = Math.floor(Math.random() * (i + 1));

    [array[i], array[j]] = [array[j], array[i]];
  }

  return array; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø–∞—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
function displayPlayBoard() {
  let pics = shuffle(); // –ø–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø–∞—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
  console.log(pics);

  // –†–∏—Å—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
  pics.forEach((pic) => {
    let div = document.createElement("div");
    div.classList.add("card");

    div.innerHTML = `
      <div class="card-front"></div>
      <div class="card-back">${pic}</div>
    `;
    BOARD.append(div);
  });
}

displayPlayBoard(); // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∫–∞–∂–¥–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
function addEventListeners() {
  let cards = document.querySelectorAll(".card"); // –∫–æ–ª–ª–µ–∫—Ü–∏—è –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ–ª—è

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞ –Ω–∞ –∫–∞–∂–¥–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
  cards.forEach((card) => {
    card.addEventListener("click", (event) => {
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç—ã—Ö, –Ω–µ—Å–æ–≤–ø–∞–≤—à–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
      let flipped = document.querySelectorAll(".flipped:not(.matched)");

      //  –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –º–µ–Ω—å—à–µ 2, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
      if (flipped.length <= 1) {
        flipCard(event.currentTarget);
      }
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
function flipCard(target) {
  STATISTICS.moves++;
  MOVES.textContent = `${STATISTICS.moves} —à–∞–≥–æ–≤`;
    
  target.classList.add("flipped"); // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∞—Å—Å –¥–ª—è –µ–µ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç—ã—Ö, –Ω–µ—Å–æ–≤–ø–∞–≤—à–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
  let flipped = document.querySelectorAll(".flipped:not(.matched)");

  if (flipped.length === 2) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å
    if (flipped[0].textContent === flipped[1].textContent) {
      flipped[0].classList.add("matched");
      flipped[1].classList.add("matched");
    } else {
      setTimeout(() => {
        overturnCard(flipped); //—á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä—É–±–∞—à–∫–æ–π –≤–≤–µ—Ä—Ö, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç
      }, 1000);
    }
  }

  let matched = document.querySelectorAll(".matched");
  if (matched.length === Math.pow(DIMENSION, 2)) {
    setTimeout(() => {
      BOARD_CONTAINER.classList.add("flipped");

      WIN.innerHTML = `
        <div class='win-text'>
          –ü–æ–±–µ–¥–∞! <br/> 
          <span class="highlight">${STATISTICS.moves}
          </span> ${(STATISTICS.moves + "").slice(-1) === "1" ? "—Ö–æ–¥"
          : (STATISTICS.moves + "").slice(-1) === "2"
          || (STATISTICS.moves + "").slice(-1) === "3"
          || (STATISTICS.moves + "").slice(-1) === "4" ? "—Ö–æ–¥–∞"
          : "—Ö–æ–¥–æ–≤"}  <br/>
          <span class="highlight">${STATISTICS.time}
          </span> ${(STATISTICS.time + "").slice(-1) === "1" ? "—Å–µ–∫—É–Ω–¥–∞"
          : (STATISTICS.time + "").slice(-1) === "2"
          || (STATISTICS.time + "").slice(-1) === "3"
          || (STATISTICS.time + "").slice(-1) === "4" ? "—Å–µ–∫—É–Ω–¥—ã"
          : "—Å–µ–∫—É–Ω–¥"}  <br/>
        </div>
      `
      BUTTON.disabled = false;
      STATISTICS.game = true;
      STATISTICS.moves = 0;
      STATISTICS.time = 0;   

      clearInterval(STATISTICS.interval); // –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏
    }, 1000);
   
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–µ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä—É–±–∞—à–∫–æ–π –≤–≤–µ—Ä—Ö (—Å–∫—Ä—ã—Ç–∏—è)
function overturnCard(flipped) {
  flipped[0].classList.remove("flipped");
  flipped[1].classList.remove("flipped");
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
function startGame() {
  BUTTON.disabled = true; // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ä—Ç"
  MOVES.textContent = `${STATISTICS.moves} —Ö–æ–¥–æ–≤`;
  BOARD_CONTAINER.classList.remove("flipped");
  
  if (STATISTICS.game) {
    BOARD.innerHTML = '';
    displayPlayBoard();
  };

  STATISTICS.interval = setInterval(() => {
    STATISTICS.time++;
    TIMER.textContent = `–í—Ä–µ–º—è: ${STATISTICS.time} c`;    
  }, 1000)
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
BUTTON.addEventListener("click", () => {
  startGame();
  addEventListeners();
});
